# Generated by Django 5.2.3 on 2025-06-17 00:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='medical_documents/')),
                ('file_hash', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processing_error_message', models.TextField(blank=True, null=True)),
                ('gpt_json_file', models.FileField(blank=True, null=True, upload_to='gpt_json_responses/')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalSpecialty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type_title', models.CharField(choices=[('exam', 'Преглед'), ('consultation', 'Консултация'), ('intervention', 'Интервенция'), ('procedure', 'Манипулация'), ('treatment', 'Лечение'), ('session', 'Сесия'), ('surgery', 'Операция'), ('hospitalization', 'Хоспитализация'), ('screening', 'Скрининг'), ('medical_commission', 'Медицинска комисия'), ('referral', 'Направление'), ('conclusion', 'Заключение/Становище'), ('certificate', 'Удостоверение/Сертификат'), ('document', 'Документ'), ('other', 'Друго')], default='other', max_length=32)),
                ('event_date', models.DateField(blank=True, null=True)),
                ('summary', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='MedJ.medicalcategory')),
                ('source_document', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medical_event', to='MedJ.document')),
                ('tags', models.ManyToManyField(blank=True, related_name='medical_events_with_tag', to='MedJ.documenttag')),
                ('specialty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='MedJ.medicalspecialty')),
            ],
        ),
        migrations.CreateModel(
            name='NarrativeSectionResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('medical_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='narrative_section_results', to='MedJ.medicalevent')),
            ],
        ),
        migrations.CreateModel(
            name='PatientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='medicalevent',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_events', to='MedJ.patientprofile'),
        ),
        migrations.AddField(
            model_name='document',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='MedJ.patientprofile'),
        ),
        migrations.CreateModel(
            name='Practitioner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('title', models.CharField(blank=True, default='Д-р', max_length=50)),
                ('medical_events', models.ManyToManyField(blank=True, related_name='practitioners_for_event', to='MedJ.medicalevent')),
                ('specialty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='MedJ.medicalspecialty')),
            ],
        ),
        migrations.AddField(
            model_name='medicalevent',
            name='practitioners',
            field=models.ManyToManyField(blank=True, related_name='medical_events_as_primary_practitioner', to='MedJ.practitioner'),
        ),
        migrations.CreateModel(
            name='BloodTestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicator_name', models.CharField(max_length=200)),
                ('value', models.CharField(max_length=100)),
                ('unit', models.CharField(max_length=50)),
                ('reference_range', models.CharField(blank=True, max_length=100)),
                ('medical_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blood_test_results', to='MedJ.medicalevent')),
            ],
            options={
                'unique_together': {('medical_event', 'indicator_name', 'unit')},
            },
        ),
    ]
